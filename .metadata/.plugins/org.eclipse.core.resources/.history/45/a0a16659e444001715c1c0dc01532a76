package graphics;
import java.awt.Color;
import java.util.Vector;

import javax.media.j3d.BranchGroup;
import javax.media.j3d.Canvas3D;
import javax.swing.JFrame;
import javax.swing.Timer;

import com.sun.j3d.utils.geometry.Box;
import com.sun.j3d.utils.geometry.ColorCube;
import com.sun.j3d.utils.universe.SimpleUniverse;

import core.GameObject;

public class Graphics3D 
{
	static SimpleUniverse universe;
	static BranchGroup objects;
	static Timer refreshTimer = new Timer(60, null);
	static Vector<GUI> GUIImages = new Vector<GUI>();
	
	public Graphics3D()
	{
		universe = new SimpleUniverse();
		objects = new BranchGroup();
		
		universe.getViewingPlatform().setNominalViewingTransform();
		universe.getViewer().getView().setBackClipDistance(1.1);
		universe.getViewer().getView().setFrontClipDistance(1.0);
	}
	
	public JFrame getWindow()
	{
		return universe.getViewer().getJFrame(0);
	}
	
	public Canvas3D getCanvas()
	{
		return universe.getCanvas();
	}
	
	public SimpleUniverse getUniverse()
	{
		return universe;
	}
	
	public void AddObject(BoxObject toAdd)
	{
		objects.addChild(toAdd.getShape());		
	}
	
	public void compileObjects()
	{
		objects.compile();
		universe.addBranchGraph(objects);
	}
	
	public void AddGUIImage(GUI toAdd)
	{
		GUIImages.add(toAdd);
	}
	
	public void Repaint()
	{
		//universe.getCanvas().getView().repaint();
		
		for(int i = 0; i < GUIImages.size(); i++)
		{
			universe.getCanvas().getGraphics().drawImage(GUIImages.get(i).getImage(), 0, 0, null);
		}
		universe.getCanvas().postRender();
		universe.getCanvas().getGraphics2D().flush(false);
	}
}
